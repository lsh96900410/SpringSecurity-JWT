server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: {username}
    password: {password}
    
 
  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
  
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 78534877453-d27kh431ogms0dr4d7fili0u80glv12g.apps.googleusercontent.com
            client-secret: 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
            scope:
            - email
            - profile

          facebook:
            client-id: 362960719654246
            client-secret: b06aad6317324a22b2aeccd936b58960
            scope:
            - email
            - public_profile

          naver:
            client-id: uzyCUd5rNqcu4E1oSGx8  
            client-secret: EInJe818b3
            scope:
            - name
            - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            
        provider: 
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원정보를 json 형식으로 받음. response 라는 키 값으로 네이버가 리턴해줌
                

          
          
